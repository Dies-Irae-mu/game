# Generated by Django 4.2.13 on 2025-05-12 17:06

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("objects", "0014_defaultobject_crisis_defaultcharacter_defaultexit_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="NPCGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("db_key", models.CharField(max_length=255, verbose_name="Name")),
                (
                    "db_group_type",
                    models.CharField(
                        default="Generic", max_length=100, verbose_name="Group Type"
                    ),
                ),
                (
                    "db_splat",
                    models.CharField(
                        choices=[
                            ("mortal", "Mortal"),
                            ("vampire", "Vampire"),
                            ("mage", "Mage"),
                            ("shifter", "Shifter"),
                            ("changeling", "Changeling"),
                            ("hunter", "Hunter"),
                            ("demon", "Demon"),
                            ("wraith", "Wraith"),
                            ("mummy", "Mummy"),
                            ("psychic", "Psychic"),
                            ("mortal+", "Mortal+"),
                            ("spirit", "Spirit"),
                        ],
                        default="mortal",
                        max_length=20,
                        verbose_name="Default Splat",
                    ),
                ),
                (
                    "db_difficulty",
                    models.CharField(
                        choices=[
                            ("LOW", "Low"),
                            ("MEDIUM", "Medium"),
                            ("HIGH", "High"),
                        ],
                        default="MEDIUM",
                        max_length=10,
                        verbose_name="Default Difficulty",
                    ),
                ),
                (
                    "db_description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "db_territory",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Territory"
                    ),
                ),
                (
                    "db_resources",
                    models.PositiveSmallIntegerField(
                        default=0, verbose_name="Resources"
                    ),
                ),
                (
                    "db_influence",
                    models.PositiveSmallIntegerField(
                        default=0, verbose_name="Influence"
                    ),
                ),
                (
                    "db_uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("db_date_created", models.DateTimeField(auto_now_add=True)),
                ("db_last_modified", models.DateTimeField(auto_now=True)),
                (
                    "db_creator",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_npc_groups",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Creator",
                    ),
                ),
                (
                    "db_object",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="objects.objectdb",
                        verbose_name="Game Object",
                    ),
                ),
            ],
            options={
                "verbose_name": "NPC Group",
                "verbose_name_plural": "NPC Groups",
                "ordering": ["db_key"],
            },
        ),
        migrations.CreateModel(
            name="NPCGoal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("db_text", models.TextField(verbose_name="Goal Text")),
                (
                    "db_order",
                    models.PositiveSmallIntegerField(default=0, verbose_name="Order"),
                ),
                (
                    "db_completed",
                    models.BooleanField(default=False, verbose_name="Completed"),
                ),
                (
                    "npc_group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="goals",
                        to="npc_manager.npcgroup",
                        verbose_name="NPC Group",
                    ),
                ),
            ],
            options={
                "verbose_name": "NPC Goal",
                "verbose_name_plural": "NPC Goals",
                "ordering": ["npc_group", "db_order"],
            },
        ),
        migrations.CreateModel(
            name="NPC",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("db_key", models.CharField(max_length=255, verbose_name="Name")),
                (
                    "db_splat",
                    models.CharField(
                        choices=[
                            ("mortal", "Mortal"),
                            ("vampire", "Vampire"),
                            ("mage", "Mage"),
                            ("shifter", "Shifter"),
                            ("changeling", "Changeling"),
                            ("hunter", "Hunter"),
                            ("demon", "Demon"),
                            ("wraith", "Wraith"),
                            ("mummy", "Mummy"),
                            ("psychic", "Psychic"),
                            ("mortal+", "Mortal+"),
                            ("spirit", "Spirit"),
                        ],
                        default="mortal",
                        max_length=20,
                        verbose_name="Splat",
                    ),
                ),
                (
                    "db_difficulty",
                    models.CharField(
                        choices=[
                            ("LOW", "Low"),
                            ("MEDIUM", "Medium"),
                            ("HIGH", "High"),
                        ],
                        default="MEDIUM",
                        max_length=10,
                        verbose_name="Difficulty",
                    ),
                ),
                (
                    "db_description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "db_is_temporary",
                    models.BooleanField(default=False, verbose_name="Temporary"),
                ),
                (
                    "db_expiration_time",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Expiration Time"
                    ),
                ),
                (
                    "db_group_number",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Group Number"
                    ),
                ),
                (
                    "db_uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("db_date_created", models.DateTimeField(auto_now_add=True)),
                ("db_last_modified", models.DateTimeField(auto_now=True)),
                (
                    "db_creator",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_npcs",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Creator",
                    ),
                ),
                (
                    "db_group",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="npcs",
                        to="npc_manager.npcgroup",
                        verbose_name="NPC Group",
                    ),
                ),
                (
                    "db_object",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="objects.objectdb",
                        verbose_name="Game Object",
                    ),
                ),
            ],
            options={
                "verbose_name": "NPC",
                "verbose_name_plural": "NPCs",
                "ordering": ["db_key"],
            },
        ),
        migrations.CreateModel(
            name="NPCPosition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "db_title",
                    models.CharField(max_length=100, verbose_name="Position Title"),
                ),
                (
                    "db_description",
                    models.TextField(blank=True, verbose_name="Position Description"),
                ),
                (
                    "db_order",
                    models.PositiveSmallIntegerField(
                        default=0, verbose_name="Hierarchy Order"
                    ),
                ),
                (
                    "npc",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="positions",
                        to="npc_manager.npc",
                        verbose_name="NPC",
                    ),
                ),
                (
                    "npc_group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="positions",
                        to="npc_manager.npcgroup",
                        verbose_name="NPC Group",
                    ),
                ),
            ],
            options={
                "verbose_name": "NPC Position",
                "verbose_name_plural": "NPC Positions",
                "ordering": ["npc_group", "db_order", "db_title"],
                "unique_together": {("npc_group", "npc")},
            },
        ),
    ]
